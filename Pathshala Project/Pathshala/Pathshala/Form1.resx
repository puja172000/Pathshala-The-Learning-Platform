<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DgQePuPNETShbPME4kZXb26XzRETShZ//9k=
</value>
  </data>
</root>